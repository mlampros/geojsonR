{
    "collab_server" : "",
    "contents" : "\n\nlibrary(mongolite)         # in mongolite I can insert either a named list, data.frame or vector [ SEE Documentation : https://jeroenooms.github.io/mongolite/]\n\ninit120 = mongo(\"GeoJs_countries120\")\n\njson_files = list.files('/home/lampros/Downloads/COUNTRIES/modified', full.names = T)                   # https://github.com/glynnbird/countriesgeojson\n\n#json_files = list.files('/home/lampros/Downloads/GEOJSON/mongo_geojs', full.names = T)\n\n#json_files = list.files('/home/lampros/Downloads/COUNTRIES/countriesGeoJson_modified', full.names = T)\n\n#lst_js = list()\n\nfor (i in 1:length(json_files)) {\n\n  # tmp = textTinyR::read_characters(json_files[i], characters = 10000)\n  #\n  # rpl = gsub( \"geometry\", \"loc\", tmp$data)\n  #\n  # readr::write_lines(rpl, json_files[i])\n\n  #write(rpl, json_files[i])\n\n  #lst_js[[i]] = jsonlite::read_json(json_files[i], simplifyVector = F)\n\n  # cat(json_files[i], '\\n')\n  #\n  # init40$insert(geojsonR::Dump_From_GeoJson(json_files[i]))\n\n  init120$insert(jsonlite::read_json(json_files[i]))\n  #init100$insert(geojsonR::Dump_From_GeoJson(json_files[i]))          # add the geojson-files to the database\n  #init$insert(jsonlite::read_json(json_files[i], simplifyVector = T))          # add the geojson-files to the database\n}\n\nalldata = init$find('{}', limit = 5)            #                           # returns all items of the database\n\nstr(alldata)\n\nalldata = init120$find('{}')\n\nalldata$geometry$coordinates\n\n# the 'properties.type' columnname is saved as 'properties.name.type' [ use str() in case a column does not appear during quering to get the full columnnames of the data.frame ]\n\nsubs = init$find(query = '{\"geometry.type\" : \"LineString\"}',\n\n                 fields = '{ \"geometry.type\" : true, \"properties.name.type\" : true, \"_id\" : false}'\n                 )\nsubs\n\n# THE FOLLOWING QUERY RETURNS \"data frame with 0 columns and 0 rows\" [ PROBABLY EITHER THE QUERY IS WRONG OR THE GEOJSON FEATURE IS NOT SUPPORTED]\n\nsubs1 = init120$find(query =\n'{\n  \"loc\":\n  { \"$geoIntersects\" :\n  {\n    \"$geometry\" : { \"type\" : \"Polygon\",\n \"coordinates\": [\n   [\n[\n  -6.197885,\n  53.867565\n  ],\n  [\n  -6.032985,\n  53.153164\n  ],\n  [\n  -6.788857,\n  52.260118\n  ],\n  [\n  -8.561617,\n  51.669301\n  ],\n  [\n  -9.977086,\n  51.820455\n  ],\n  [\n  -9.166283,\n  52.864629\n  ],\n  [\n  -9.688525,\n  53.881363\n  ],\n  [\n  -8.327987,\n  54.664519\n  ],\n  [\n  -7.572168,\n  55.131622\n  ],\n  [\n  -7.366031,\n  54.595841\n  ],\n  [\n  -7.572168,\n  54.059956\n  ],\n  [\n  -6.95373,\n  54.073702\n  ],\n  [\n  -6.197885,\n  53.867565\n  ]\n  ]\n  ]\n    }\n          }\n       }\n   }',\n\nfields = '{ \"id\" : true , \"_id\" : false }'\n)\n\n\n\n\n\n#============================================================================================================================\n#============================================================================================================================\n\npnt = '{\n    \"name\" : \"John F Kennedy Intl\",\n    \"type\" : \"International\",\n    \"code\" : \"JFK\",\n    \"loc\" : {\n             \"type\" : \"Polygon\",\n             \"coordinates\": [\n               [\n                 [ -100, 60 ], [ -100, 0 ], [ -100, -60 ], [ 100, -60 ], [ 100, 60 ], [ -100, 60 ]\n               ]\n             ]\n    }\n}'\n\n\npnt = '{\n    \"name\" : \"ANOTHER\",\n    \"type\" : \"International\",\n    \"code\" : \"ANT\",\n    \"loc\" : {\n      \"type\" : \"Point\",\n      \"coordinates\" : [ -70.778889, 38.639722 ]\n    }\n}'\n\n\n\nlibrary(mongolite)         # in mongolite I can insert either a named list, data.frame or vector [ SEE Documentation : https://jeroenooms.github.io/mongolite/]\n\ninit3 = mongo(\"GeoJs_countries3\")\n\ninit3$insert(pnt)\n\ninit3$find('{}')\n\n\nsubs1 = init3$find(query =\n\n                     '{\n    \"loc\" : { \"$geoIntersects\" : { \"$geometry\" : {\n             \"type\" : \"Polygon\",\n             \"coordinates\": [\n               [\n                 [ -100, 60 ], [ -100, 0 ], [ -100, -60 ], [ 100, -60 ], [ 100, 60 ], [ -100, 60 ]\n               ]\n             ]\n    }} }\n                     }',\n\n                   fields = '{ \"name\" : true , \"type\" : true, \"code\" : true, \"_id\": false }'\n)\n\nsubs1\n\n\n\njson_files1 = list.files('/home/lampros/Downloads/countriesGeoJson', full.names = T)                   # https://github.com/glynnbird/countriesgeojson\n\n\nfor (i in 1:length(json_files1)) {\n\n  init1$insert(geojsonR::Dump_From_GeoJson(json_files1[i]))          # add the geojson-files to the database\n}\n\nalldata = init1$find('{}', limit = 5)            #                           # returns all items of the database\n\nstr(alldata)\n\n\n",
    "created" : 1488731155020.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2967064374",
    "id" : "DDAE397A",
    "lastKnownWriteTime" : 1488906330,
    "last_content_update" : 1488906330159,
    "path" : "~/Videos/mongoDB_geojson.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}